<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleUUID</key>
	<string>452017E8-0065-49EF-AB9D-7849B27D9367</string>
	<key>fileTypes</key>
	<array>
		<string>spero</string>
	</array>

	<!-- What are these for? -->
	<key>foldingStartMarker</key>
	<string>/\*\*|\{\s*$</string>
	<key>foldingStopMarker</key>
	<string>\*\*/|^\s*\}</string>

	<key>keyEquivalent</key>
	<string>^~S</string>
	<key>name</key>
	<string>spero</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#contexts</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#type-name</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#imports</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#literals</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#keywords</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#declarations</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#annotation</string>
		</dict>

		<dict>
			<key>include</key>
			<string>#qualnames</string>
		</dict>
	</array>
	
	<key>repository</key>
	<dict>
		<key>annotation</k3y>
		<dict>
			<key>match</key>
			<string>@[a-z][a-zA-z$_]*!?</string>
			<key>name</key>
			<string>variable.other.spero</string>
		</dict>

		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<!-- ##.*## -->
				<dict>
					<key>begin</key>
					<string>##</key>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.spero</string>
						</dict>
					</dict>
					<key>end</key>
					<string>##</string>
					<key>name</key>
					<string>comment.block.spero</string>
				</dict>

				<!-- #.*\n -->
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.spero</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(#).*$\n?</string>
					<key>name</key>
					<string>comment.line.number-sign.spero</string>
				</dict>
			</array>
		</dict>

		<!-- mut ?[A-Z][a-z]+ -->
		<key>type-name</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.class</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\b((mut )?[A-Z][\w]*))</string>
		</dict>

		<!-- use <import> -->
		<key>imports</key>
		<dict>
			<key>begin</key>
			<string>\b(use)\s+</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.import.spero</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;=[\n])</string>			<!-- stop the parsing at a new line -->
			<key>name</key>
			<string>meta.import.spero</string>
			
			<key>patterns</key>
			<array>
				<!-- allow for comments to highlight correctly within the use directive -->
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>

				<!-- Color rebinding -->
				<dict>
					<key>match</key>
					<string>\b(as)\s+([^\s{;:},]+)\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.other.spero</string>		<!-- keyword.control.other.spero -->
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.declaration</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.import.rebind.spero</string>
				</dict>
				
				<!-- Highlight all the variables  -->
				<dict>
					<key>match</key>
					<string>([^\s{;:},]+)\s*</string>
					<key>name</key>
					<string>variable.import.spero</string>
				</dict>
			</array>
		</dict>

		<!-- Literals -->
		<key>literals</key>
		<dict>
			<key>patterns</key>
			<array>
				<!-- String -->
				<dict>
					<key>begin</key>
					<string>(?&lt;!\\)"</string>
					<!-- look at adding in special highlighting for '{}'-->
					<key>end</key>
					<string>"</string>
					<key>name</key>
					<string>string.quoted.double.spero</string>
				</dict>

				<!-- Character -->
				<dict>
					<key>match</key>
					<string>'\\?.'</string>
					<key>name</key>
					<string>string.quoted.single.spero</string>
				</dict>

				<!-- Boolean -->
				<dict>
					<key>match</key>
					<string>\b(false|true)\b</string>
					<key>name</key>
					<string>constant.language.spero</string>
				</dict>

				<!-- Number -->
				<dict>
					<key>match</key>
					<string>\b([0-9]+(\.[0-9]+)?|0b[0-1]+|0x[0-9a-fA-F]+)\b</string>
					<key>name</key>
					<string>constant.numeric.spero</string>
				</dict>
			</array>
		</dict>

		<!-- Type/variable declarations -->
		<key>declarations</key>
		<dict>
			<key>patterns</key>
			<array>
				<!-- Highlight variable names in bindings -->
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.declaration.spero</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.declaration</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?x) \b(def|let|static|using)\s+ (([a-z$_][a-zA-Z0-9$_]*(_[^a-zA-Z0-9\s]+)?)|[^\w\[\(\:\_\s]+)</string>
				</dict>

				<!-- Highlight context keywords for types -->
				<dict>
					<key>match</key>
					<string>\b(def|let|static)\b</string>
					<key>name</key>
					<string>keyword.declaration.spero</string>
				</dict>

				<!-- Package declarations -->
				<dict>
					<key>begin</key>
					<string>\b(mod)\s+</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.import.spero</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[\n])</string>			<!-- stop the parsing at a new line -->
					<key>name</key>
					<string>meta.package.spero</string>
					
					<key>patterns</key>
					<array>						
						<!-- Highlight all the variables  -->
						<dict>
							<key>match</key>
							<string>([^\s{;:},]+)\s*</string>
							<key>name</key>
							<string>variable.package.spero</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>

		<!-- TODO: Highlight 'in' correctly (only in for loops) -->
		<!-- Keywords -->
		<key>keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(else|if|loop|while|for|match|yield|wait|return|do)\b</string>
					<key>name</key>
					<string>keyword.control.flow.spero</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(mut|impls|in|continue|break)\b</string>
					<key>name</key>
					<string>keyword.control.other.spero</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(super|self)\b</string>
					<key>name</key>
					<string>variable.parameter.spero</string>
				</dict>
			</array>
		</dict>

		<!-- Highlight modules in qualified names -->
		<key>qualnames</key>
		<dict>
			<key>match</key>
			<string>([a-z$_][a-zA-Z0-9$_]*):</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.package.spero</key>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.package.qualified.spero</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.spero</string>
	<!--<key>uuid</key>-->
</dict>
</plist>
